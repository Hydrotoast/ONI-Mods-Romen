<?xml version="1.0" encoding="utf-8"?>
<Project>
  
  <Target Name="GenerateMetadataFiles" BeforeTargets="Build" Condition="'$(IsMod)' == 'true'">
    <GenerateMetadataFiles
      OutputPath="$(TargetDir)"

      Title="$(ModName)"
      Description="$(ModDescription)"
      StaticID="$(AssemblyName)"
      
      SupportedContent="$(SupportedContent)"
      MinimumSupportedBuild="$(MinimumSupportedBuild)"
      Version="$(FileVersion)"
      APIVersion="$(APIVersion)"
    />
  </Target>
    
  <Target Name="ILRepack" AfterTargets="Build" Condition="'$(UsePLib)' == 'true' OR '$(UseCommonLib)' == 'true'">
    <ItemGroup>
      <InputAssemblies
        Include="$(TargetDir)\*.dll"
        Exclude="**/0Harmony.dll; **/System.*; **/Microsoft.*" />
    </ItemGroup>
    <ILRepack
      TargetPlatformVersion="v4"
      TargetKind="SameAsPrimaryAssembly"
      InputAssemblies="@(InputAssemblies)"
      Wildcards="true"
      LibraryPath="$(GameLibsFolder)"
      Parallel="true"
      OutputFile="$(TargetPath)"/>
  </Target>
  
  <Target
      AfterTargets="ILRepack"
      Name="CleanReferenceCopyLocalPaths"
      Condition="!Exists('$(ILRepackTargetsFile)') and '$(ClearOutputDirectory)' != 'false'">
      <Delete Files="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')" />
      <ItemGroup>
        <Directories Include="$([System.IO.Directory]::GetDirectories('$(OutDir)%(DestinationSubDirectory)', '*', System.IO.SearchOption.AllDirectories))" />
        <Directories>
          <Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
        </Directories>
      </ItemGroup>
      <RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'" />
    </Target>

  <Target Name="CopyAssets" AfterTargets="PostBuildEvent" Condition="'$(IsMod)' == 'true'">
    <Exec Command='xcopy "$(ProjectDir)Assets\Workshop" "$(ProjectDir)bin\" /s /i /y' ContinueOnError='true' />
    <Exec Command='xcopy "$(ProjectDir)Assets\Shared" "$(ProjectDir)bin\" /s /i /y' ContinueOnError='true' />
    <Exec Command='xcopy "$(ProjectDIr)Archive" "$(ProjectDir)bin\archived_versions\" /s /i /y' ContinueOnError='true' />
  </Target>
  
</Project>
