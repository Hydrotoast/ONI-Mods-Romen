using Newtonsoft.Json;

using PeterHan.PLib.Options;

namespace RomenH.TECBlock
{
	[JsonObject(MemberSerialization.OptIn)]
	[ModInfo("https://github.com/romen-h/ONI-Mods")]
	[RestartRequired]
	public class ModSettings : SingletonOptions<ModSettings>
	{
		[JsonProperty]
		[Option(title: "Power Consumption (W)",
				tooltip: "Determines the power consumed by the building, in watts.",
				category: "TEC Tile",
				Format = "F0")]
		public float CoolerWattage
		{ get; set; }

		[JsonProperty]
		[Option(title: "Efficiency (%)",
				tooltip: "Determines the percentage of the wattage that is used to calculate how much heat should be moved.",
				category: "TEC Tile",
				Format = "F2")]
		public float CoolerEfficiency
		{ get; set; }

		[JsonProperty]
		[Option(title: "Generate Waste Heat",
				tooltip: "Determines whether extra heat is added to the building by using the complement of the efficiency value.",
				category: "TEC Tile")]
		public bool GenerateInefficiencyHeat
		{ get; set; }

		[JsonProperty]
		[Option(title: "Max Power Generated (W)",
				tooltip: "Determines the maximum power generated by the TEG tile, in watts.",
				category: "TEG Tile",
				Format = "F0")]
		public float GeneratorWattage
		{ get; set; }

		[JsonProperty]
		[Option(title: "Efficiency (%)",
				tooltip: "Determines the percentage of the wattage that is used to calculate how much heat should be moved.",
				category: "TEG Tile",
				Format = "F2")]
		public float GeneratorEfficiency
		{ get; set; }

		[JsonProperty]
		[Option(title: "Realistic Construction Materials",
				tooltip: "Determines whether lead will be required to construct the TEC or any refined metal.",
				category: "Common Settings")]
		public bool RealisticMaterials
		{ get; set; }

		[JsonProperty]
		[Option(title: "kDTU/W Coefficient",
				tooltip: "Determines how much thermal energy is equivalent to one Watt.",
				category: "Common Settings")]
		public float KiloDTUPerWatt
		{ get; set; }

		[JsonProperty]
		[Option(title: "Min Cold Temp.",
				tooltip: "Determines the minimum temperature on the cold side for the TEC and TEG to remain operational.",
				category: "Common Settings",
				Format = "F0")]
		public float MinColdTemperature
		{ get; set; }

		[JsonProperty]
		[Option(title: "Max Temp. Difference (K)",
				tooltip: "Determines the maximum temperature difference that the TEC and TEG tiles can utilize.",
				category: "Common Settings",
				Format = "F0")]
		public float MaxTemperatureDifference
		{ get; set; }

		[JsonProperty]
		[Option(title: "Run Speed (%)",
				tooltip: "Detemines the run speed penalty for dupes moving across the TEC and TEG tiles.",
				category: "Common Settings",
				Format = "F2")]
		public float RunSpeedPenalty
		{ get; set; }
		
		public ModSettings()
		{
			CoolerWattage = 240f;
			CoolerEfficiency = 0.5f;
			GenerateInefficiencyHeat = true;

			GeneratorWattage = 200f;
			GeneratorEfficiency = 0.5f;

			RealisticMaterials = false;
			MinColdTemperature = 50f;
			MaxTemperatureDifference = 70f;
			KiloDTUPerWatt = 0.1f;
			RunSpeedPenalty = 0.25f;
		}
	}
}
